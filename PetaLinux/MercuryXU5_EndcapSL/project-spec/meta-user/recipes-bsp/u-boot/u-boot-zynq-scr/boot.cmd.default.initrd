# This is a boot script for U-Boot
# Generate boot.scr:
# mkimage -c none -A arm -T script -d boot.cmd.default boot.scr
#
################
@@PRE_BOOTENV@@

for boot_target in ${boot_targets};
do
    if test "${boot_target}" = "jtag" ; then
        echo "[L0MuESL] JTAG scanning now...";
        @@KERNEL_BOOTCMD@@ @@KERNEL_LOAD_ADDRESS@@ @@RAMDISK_IMAGE_ADDRESS@@ @@DEVICETREE_ADDRESS@@
        exit;
    fi
    echo "[L0MuESL] Before SD card scanning... ";
    if test "${boot_target}" = "mmc0" || test "${boot_target}" = "mmc1" ; then
        echo "[L0MuESL] SD card scanning now..."
        if test -e mmc ${devnum}:${distro_bootpart} /uEnv.txt; then
            echo "[L0MuESL] Loading uEnv.txt in SD${devnum}... ";
            load mmc ${devnum}:${distro_bootpart} 0x100000 uEnv.txt;
            env import -t 0x100000 $filesize;
            if test -n $uenvcmd; then
                echo "[L0MuESL] Loading u-boot environment by uenvcmd... ";
                run uenvcmd;
            else
                echo "[L0MuESL] Failed to load u-boot environment from uEnv.txt";
                exit;
            fi
        else
            echo "[L0MuESL] Failed to find uEnv.txt in SD${devnum}";
            exit;
        fi
        if test -e ${devtype} ${devnum}:${distro_bootpart} /@@FIT_IMAGE@@; then
            echo "[L0MuESL] SD card fatload now ...";
            fatload ${devtype} ${devnum}:${distro_bootpart} @@FIT_IMAGE_LOAD_ADDRESS@@ @@FIT_IMAGE@@;
            echo "[L0MuESL] SD card bootm command now...";
            bootm @@FIT_IMAGE_LOAD_ADDRESS@@;
            echo "[L0MuESL] Failed to load image.ub in SD card! XP";
            exit;
            echo "[L0MuESL] Exit for loop... "
        fi
        if test -e ${devtype} ${devnum}:${distro_bootpart} /@@KERNEL_IMAGE@@; then
            fatload ${devtype} ${devnum}:${distro_bootpart} @@KERNEL_LOAD_ADDRESS@@ @@KERNEL_IMAGE@@;;
        fi
        if test -e ${devtype} ${devnum}:${distro_bootpart} /system.dtb; then
            fatload ${devtype} ${devnum}:${distro_bootpart} @@DEVICETREE_ADDRESS@@ system.dtb;
        fi
        if test -e ${devtype} ${devnum}:${distro_bootpart} /@@RAMDISK_IMAGE@@; then
            fatload ${devtype} ${devnum}:${distro_bootpart} @@RAMDISK_IMAGE_ADDRESS@@ @@RAMDISK_IMAGE@@;
            @@KERNEL_BOOTCMD@@ @@KERNEL_LOAD_ADDRESS@@ @@RAMDISK_IMAGE_ADDRESS@@ @@DEVICETREE_ADDRESS@@
            exit;
        fi
        @@KERNEL_BOOTCMD@@ @@KERNEL_LOAD_ADDRESS@@ - @@DEVICETREE_ADDRESS@@
        exit;
    fi
    echo "[L0MuESL] Before QSPI scanning... ";
    if test "${boot_target}" = "xspi0" || test "${boot_target}" = "qspi" || test "${boot_target}" = "qspi0"; then
        echo "[L0MuESL] QSPI flash scanning now...";
        sf probe 0 0 0;
        if test "@@QSPI_KERNEL_IMAGE@@" = "@@FIT_IMAGE@@"; then
            echo "[L0MuESL] QSPI sf read now...";
            sf read @@QSPI_FIT_IMAGE_LOAD_ADDRESS@@ @@QSPI_KERNEL_OFFSET@@ @@QSPI_FIT_IMAGE_SIZE@@;
            echo "[L0MuESL] QSPI bootm command now...";
            bootm @@QSPI_FIT_IMAGE_LOAD_ADDRESS@@;
            echo "[L0MuESL] Failed to load image.ub in QSPI flash! XP\n";
            exit;
            echo "[L0MuESL] Exit for loop... ";
        fi
        if test "@@QSPI_KERNEL_IMAGE@@" = "@@KERNEL_IMAGE@@"; then
            sf read @@KERNEL_LOAD_ADDRESS@@ @@QSPI_KERNEL_OFFSET@@ @@QSPI_KERNEL_SIZE@@;
            sf read @@RAMDISK_IMAGE_ADDRESS@@ @@QSPI_RAMDISK_OFFSET@@ @@QSPI_RAMDISK_SIZE@@
            @@KERNEL_BOOTCMD@@ @@KERNEL_LOAD_ADDRESS@@ @@RAMDISK_IMAGE_ADDRESS@@ @@DEVICETREE_ADDRESS@@
            exit;
        fi
        exit;
    fi
    if test "${boot_target}" = "nand" || test "${boot_target}" = "nand0"; then
        nand info
        if test "@@NAND_KERNEL_IMAGE@@" = "@@FIT_IMAGE@@"; then
            nand read @@NAND_FIT_IMAGE_LOAD_ADDRESS@@ @@NAND_KERNEL_OFFSET@@ @@NAND_FIT_IMAGE_SIZE@@;
            bootm @@NAND_FIT_IMAGE_LOAD_ADDRESS@@;
            exit;
        fi
        if test "@@NAND_KERNEL_IMAGE@@" = "@@KERNEL_IMAGE@@"; then
            nand read @@KERNEL_LOAD_ADDRESS@@ @@NAND_KERNEL_OFFSET@@ @@NAND_KERNEL_SIZE@@;
            nand read @@RAMDISK_IMAGE_ADDRESS@@ @@NAND_RAMDISK_OFFSET@@  @@NAND_RAMDISK_SIZE@@;
            @@KERNEL_BOOTCMD@@ @@KERNEL_LOAD_ADDRESS@@ @@RAMDISK_IMAGE_ADDRESS@@ @@DEVICETREE_ADDRESS@@
            exit;
        fi
    fi
done
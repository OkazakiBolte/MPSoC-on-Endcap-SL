----------------------------------------------------------------------------------
--Tool Version: Vivado v.2020.1 (lin64) Build 2902540 Wed May 27 19:54:35 MDT 2020
--Date        : Fri Nov  5 16:53:08 2021
--Host        : lhcelec01 running 64-bit Ubuntu 18.04.6 LTS
--Command     : generate_target design_1_wrapper.bd
--Design      : design_1_wrapper
--Purpose     : IP block netlist
----------------------------------------------------------------------------------

-- I create this entity copying and pasting design_1_wrapper.vhd which is
-- generated by Vivado from design_1.bd.
-- And I add Enclustra_GMII2RGMII_ZU here as the reference design
-- Mercury_XU5_PE1.vhd from Enclustra, for ETH1.
-- https://github.com/enclustra/Mercury_XU5_PE1_Reference_Design.git

---- Libraries ----
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
library UNISIM;
use UNISIM.VCOMPONENTS.ALL;

---- Entity declaration ----
entity MercuryXU5_EndcapSL is
    port (
        -- 3-bit LED on the mezzanine
        LED_N_tri_o   : out STD_LOGIC_VECTOR ( 2 downto 0 );
        -- PL_Gigabit_Ethernet
        ETH1_MDC      : out   std_logic;
        ETH1_RXCLK    : in    std_logic;
        ETH1_TXCLK    : out   std_logic;
        ETH1_MDIO     : inout std_logic;
        ETH1_INT_N    : in    std_logic;
        ETH1_RESET_N  : out   std_logic;
        ETH1_RXCTL    : in    std_logic;
        ETH1_TXCTL    : out   std_logic;
        ETH1_RXD      : in    std_logic_vector(3 downto 0);
        ETH1_TXD      : out   std_logic_vector(3 downto 0)
    );
end MercuryXU5_EndcapSL;

architecture STRUCTURE of MercuryXU5_EndcapSL is

    ---- Component declarations ----
    component design_1 is
        port (
            ETH_CLK125      : out STD_LOGIC;
            ETH_CLK125_90   : out STD_LOGIC;
            ETH_CLK25       : out STD_LOGIC;
            ETH_CLK10       : out STD_LOGIC;
            ETH_resetn      : out STD_LOGIC;
            LED_N_tri_o     : out STD_LOGIC_VECTOR ( 2 downto 0 );
            GMII_rx_clk     : in  STD_LOGIC;
            GMII_speed_mode : out STD_LOGIC_VECTOR ( 2 downto 0 );
            GMII_crs        : in  STD_LOGIC;
            GMII_col        : in  STD_LOGIC;
            GMII_rxd        : in  STD_LOGIC_VECTOR ( 7 downto 0 );
            GMII_rx_er      : in  STD_LOGIC;
            GMII_rx_dv      : in  STD_LOGIC;
            GMII_tx_clk     : in  STD_LOGIC;
            GMII_txd        : out STD_LOGIC_VECTOR ( 7 downto 0 );
            GMII_tx_en      : out STD_LOGIC;
            GMII_tx_er      : out STD_LOGIC;
            MDIO_mdc        : out STD_LOGIC;
            MDIO_mdio_i     : in  STD_LOGIC;
            MDIO_mdio_o     : out STD_LOGIC;
            MDIO_mdio_t     : out STD_LOGIC
        );
    end component design_1;

    component IOBUF is
        port (
            I  : in    STD_LOGIC;
            O  : out   STD_LOGIC;
            T  : in    STD_LOGIC;
            IO : inout STD_LOGIC
        );
    end component IOBUF;

    component Enclustra_GMII2RGMII_ZU is
        port (
            Clk125          : in  std_logic;
            Clk125_90       : in  std_logic;
            Clk25           : in  std_logic;
            Clk10           : in  std_logic;
            Resetn          : in  std_logic;

            GMII_col        : out std_logic;
            GMII_crs        : out std_logic;
            GMII_rx_clk     : out std_logic;
            GMII_rx_dv      : out std_logic;
            GMII_rx_er      : out std_logic;
            GMII_rxd        : out std_logic_vector(7 downto 0);
            GMII_speed_mode : in  std_logic_vector(2 downto 0);
            GMII_tx_clk     : out std_logic;
            GMII_tx_en      : in  std_logic;
            GMII_tx_er      : in  std_logic;
            GMII_txd        : in  std_logic_vector(7 downto 0);

            RGMII_rxd       : in  std_logic_vector(3 downto 0);
            RGMII_rxclk     : in  std_logic;
            RGMII_rxctl     : in  std_logic;
            RGMII_txd       : out std_logic_vector(3 downto 0);
            RGMII_txclk     : out std_logic;
            RGMII_txctl     : out std_logic;

            Speed1000En     : out std_logic;
            Speed100En      : out std_logic;
            Speed10En       : out std_logic
        );
    end component Enclustra_GMII2RGMII_ZU;

    ---- Signal declarations ----
    signal MDIO_mdio_i      : std_logic;
    signal MDIO_mdio_o      : std_logic;
    signal MDIO_mdio_t      : std_logic;
    signal ETH_CLK125       : std_logic;
    signal ETH_CLK125_90    : std_logic;
    signal ETH_CLK25        : std_logic;
    signal ETH_CLK10        : std_logic;
    signal ETH_resetn       : std_logic;
    signal GMII_col         : std_logic;
    signal GMII_crs         : std_logic;
    signal GMII_rx_clk      : std_logic;
    signal GMII_rx_dv       : std_logic;
    signal GMII_rx_er       : std_logic;
    signal GMII_rxd         : std_logic_vector(7 downto 0);
    signal GMII_speed_mode  : std_logic_vector(2 downto 0);
    signal GMII_tx_clk      : std_logic;
    signal GMII_tx_en       : std_logic;
    signal GMII_tx_er       : std_logic;
    signal GMII_txd         : std_logic_vector(7 downto 0);

begin

    design_1_i: component design_1
        port map (
            ETH_CLK10       => ETH_CLK10,
            ETH_CLK125      => ETH_CLK125,
            ETH_CLK125_90   => ETH_CLK125_90,
            ETH_CLK25       => ETH_CLK25,
            ETH_resetn      => ETH_resetn,
            GMII_col        => GMII_col,
            GMII_crs        => GMII_crs,
            GMII_rx_clk     => GMII_rx_clk,
            GMII_rx_dv      => GMII_rx_dv,
            GMII_rx_er      => GMII_rx_er,
            GMII_rxd        => GMII_rxd,
            GMII_speed_mode => GMII_speed_mode,
            GMII_tx_clk     => GMII_tx_clk,
            GMII_tx_en      => GMII_tx_en,
            GMII_tx_er      => GMII_tx_er,
            GMII_txd        => GMII_txd,
            LED_N_tri_o     => LED_N_tri_o,
            MDIO_mdc        => MDIO_mdc,
            MDIO_mdio_i     => MDIO_mdio_i,
            MDIO_mdio_o     => MDIO_mdio_o,
            MDIO_mdio_t     => MDIO_mdio_t
        );

    MDIO_mdio_iobuf: component IOBUF
        port map (
            I  => MDIO_mdio_o,
            IO => ETH1_MDIO,
            O  => MDIO_mdio_i,
            T  => MDIO_mdio_t
        );

    -- We cannot use Xilinx's GMII2RGMII IP core for Mercury XU5 mezzanine.
    -- Instead, Enclustra provides Enclustra_GMII2RGMII_ZU.edn.
    -- Please see Mercury XU5 PE1 reference design.
    -- https://github.com/enclustra/Mercury_XU5_PE1_Reference_Design.git
    i_gmii2rgmii : Enclustra_GMII2RGMII_ZU
        port map (
            Clk125          => ETH_CLK125,
            Clk125_90       => ETH_CLK125_90,
            Clk25           => ETH_Clk25,
            Clk10           => ETH_Clk10,
            Resetn          => ETH_resetn,

            GMII_col        => GMII_col,
            GMII_crs        => GMII_crs,
            GMII_rx_clk     => GMII_rx_clk,
            GMII_rx_dv      => GMII_rx_dv,
            GMII_rx_er      => GMII_rx_er,
            GMII_rxd        => GMII_rxd,
            GMII_speed_mode => GMII_speed_mode,
            GMII_tx_clk     => GMII_tx_clk,
            GMII_tx_en      => GMII_tx_en,
            GMII_tx_er      => GMII_tx_er,
            GMII_txd        => GMII_txd,

            RGMII_rxd       => ETH1_RXD,
            RGMII_rxclk     => ETH1_RXCLK,
            RGMII_rxctl     => ETH1_RXCTL,
            RGMII_txd       => ETH1_TXD,
            RGMII_txclk     => ETH1_TXCLK,
            RGMII_txctl     => ETH1_TXCTL,

            Speed1000En     => open,
            Speed100En      => open,
            Speed10En       => open
        );

end STRUCTURE;
